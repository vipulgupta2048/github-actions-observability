# GitHub Actions Observability Configuration - Traces and Metrics
receivers:
  # GitHub receiver for traces and metrics from GitHub Actions webhooks
  github:
    webhook:
      endpoint: "0.0.0.0:9504"
      path: "/events"
      health_path: "/health"
      secret: ${GITHUB_WEBHOOK_SECRET}
      service_name: "gh"
    scrapers:
      scraper:
        github_org: ${GITHUB_ORG}
        search_query: "repo:${GITHUB_ORG}/${GITHUB_REPO}"
        auth:
          authenticator: bearertokenauth

extensions:
  # Bearer token authentication for GitHub API scraping
  bearertokenauth:
    token: ${GITHUB_TOKEN}

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024
  
  # Add service name and environment labels
  resource:
    attributes:
      - key: service.name
        value: "github-actions"
        action: upsert
      - key: service.version
        value: "1.0.0"
        action: upsert
      - key: deployment.environment
        value: "production"
        action: upsert

  # Transform processor handles both attribute mapping and status code conversion
  transform:
    trace_statements:
      - set(span.attributes["workflow_step"], span.name) where span.name != nil
      - set(span.attributes["step_status"], "success") where span.status.code == STATUS_CODE_OK
      - set(span.attributes["step_status"], "error") where span.status.code == STATUS_CODE_ERROR 
      - set(span.attributes["step_status"], "unset") where span.status.code == STATUS_CODE_UNSET

exporters:
  # Export metrics to Prometheus scrape endpoint
  prometheus:
    endpoint: "0.0.0.0:9464"
    namespace: "github_actions"
    resource_to_telemetry_conversion:
      enabled: false
  
  # Debug exporter for troubleshooting
  debug:
    verbosity: detailed
    sampling_initial: 2
    sampling_thereafter: 500

connectors:
  # Generate metrics from spans for Prometheus (RED metrics)
  spanmetrics:
    histogram:
      explicit:
        buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms, 500ms, 1000ms, 2000ms, 5s, 10s, 20s, 40s, 60s]
      unit: "s"
    dimensions:
      # Use minimal custom dimensions to avoid all conflicts
      - name: workflow_step
        default: "unknown"
      - name: step_status
        default: "unknown"
    exemplars:
      enabled: true
    dimensions_cache_size: 1000
    aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
    metrics_flush_interval: 15s
    metrics_expiration: 30m
    resource_metrics_key_attributes:
      - service.name
      - service.version
      - deployment.environment

service:
  extensions: [bearertokenauth]
  pipelines:
    # Traces pipeline for GitHub Actions workflow spans
    traces:
      receivers: [github]
      processors: [resource, transform, batch]
      exporters: [debug, spanmetrics]
    
    # Metrics pipeline for GitHub Actions metrics (includes span-derived metrics)
    metrics:
      receivers: [github, spanmetrics]
      processors: [resource, batch]
      exporters: [prometheus, debug]
