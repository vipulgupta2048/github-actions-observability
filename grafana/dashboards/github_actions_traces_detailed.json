{
  "id": null,
  "title": "GitHub Actions - Deep Trace Analysis",
  "tags": [
    "github",
    "actions",
    "traces",
    "otel",
    "detailed"
  ],
  "timezone": "browser",
  "description": "Advanced trace-level analysis of GitHub Actions with step performance metrics, error patterns, and execution insights for comprehensive observability",
  "panels": [
    {
      "id": 1,
      "title": "Recent Workflow Executions",
      "type": "table",
      "description": "Overview of all workflow step executions with execution counts per repository and status",
      "targets": [
        {
          "expr": "sum by (workflow_step, service_name, step_status) (github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\"})",
          "refId": "A",
          "format": "table",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "workflow_step"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Pipeline"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "service_name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Repository"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "workflow_step"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Step"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "step_status"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Status"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Executions"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 24,
        "x": 0,
        "y": 0
      }
    },
    {
      "id": 2,
      "title": "Step Duration Analysis",
      "type": "graph",
      "description": "Average execution time per workflow step over time - identify performance bottlenecks and trending slowdowns",
      "targets": [
        {
          "expr": "sum by (workflow_step) (rate(github_actions_traces_span_metrics_duration_seconds_sum{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}[5m])) / sum by (workflow_step) (rate(github_actions_traces_span_metrics_duration_seconds_count{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}[5m]))",
          "refId": "A",
          "legendFormat": "{{workflow_step}}",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "yAxes": [
        {
          "unit": "s",
          "label": "Average Duration"
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 10
      }
    },
    {
      "id": 3,
      "title": "Success Rate by Step",
      "type": "table",
      "description": "Success percentage for each workflow step - quickly identify unreliable steps in your CI/CD pipeline",
      "targets": [
        {
          "expr": "sum by (workflow_step) (github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\",step_status=\"success\"}) / sum by (workflow_step) (github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}) * 100",
          "refId": "A",
          "format": "table",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "fieldConfig": {
        "defaults": {
          "unit": "percent",
          "custom": {
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "workflow_step"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Step Name"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Success Rate %"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 18
      }
    },
    {
      "id": 4,
      "title": "Pipeline Activity Heatmap",
      "type": "heatmap",
      "targets": [
        {
          "expr": "sum by (workflow_step) (rate(github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}[5m]))",
          "refId": "A",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 18
      }
    },
    {
      "id": 5,
      "title": "Execution Timeline",
      "type": "graph",
      "targets": [
        {
          "expr": "sum by (workflow_step) (rate(github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}[1m]))",
          "refId": "A",
          "legendFormat": "{{workflow_step}}",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "yAxes": [
        {
          "unit": "short",
          "label": "Executions per minute"
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 26
      }
    },
    {
      "id": 6,
      "title": "Step Duration Distribution",
      "type": "graph",
      "description": "50th and 95th percentile duration for each step - understand performance variability and outliers",
      "targets": [
        {
          "expr": "histogram_quantile(0.50, sum by (workflow_step, le) (rate(github_actions_traces_span_metrics_duration_seconds_bucket{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}[5m])))",
          "refId": "A",
          "legendFormat": "{{workflow_step}} - 50th",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        },
        {
          "expr": "histogram_quantile(0.95, sum by (workflow_step, le) (rate(github_actions_traces_span_metrics_duration_seconds_bucket{service_name=~\"$service\",workflow_step=~\"$workflow_step\"}[5m])))",
          "refId": "B",
          "legendFormat": "{{workflow_step}} - 95th",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "yAxes": [
        {
          "unit": "s",
          "label": "Duration"
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 34
      }
    },
    {
      "id": 7,
      "title": "Repository Activity Breakdown",
      "type": "piechart",
      "targets": [
        {
          "expr": "sum by (service_name) (github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\"})",
          "refId": "A",
          "legendFormat": "{{service_name}}",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 42
      }
    },
    {
      "id": 8,
      "title": "Error Frequency by Step",
      "type": "table",
      "targets": [
        {
          "expr": "sum by (workflow_step, step_status) (github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\",step_status!=\"success\"})",
          "refId": "A",
          "format": "table",
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "align": "left"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "workflow_step"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Step Name"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "step_status"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Error Type"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Error Count"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 42
      }
    },
    {
      "id": 9,
      "title": "Workflow Step Execution Flow",
      "type": "nodeGraph",
      "description": "Visual representation of workflow step execution flow and dependencies",
      "targets": [
        {
          "expr": "sum by (workflow_step, step_status) (github_actions_traces_span_metrics_calls_total{service_name=~\"$service\",workflow_step=~\"$workflow_step\"})",
          "refId": "A",
          "format": "table",
          "instant": true,
          "datasource": {
            "type": "prometheus",
            "uid": "prometheus"
          }
        }
      ],
      "fieldConfig": {
        "defaults": {
          "mappings": [
            {
              "options": {
                "success": {
                  "color": "green",
                  "index": 0
                },
                "failure": {
                  "color": "red",
                  "index": 1
                },
                "cancelled": {
                  "color": "orange",
                  "index": 2
                }
              },
              "type": "value"
            }
          ]
        }
      },
      "options": {
        "nodes": {
          "mainStat": "value",
          "secondaryStat": "last"
        }
      },
      "gridPos": {
        "h": 8,
        "w": 24,
        "x": 0,
        "y": 50
      }
    }
  ],
  "time": {
    "from": "now-24h",
    "to": "now"
  },
  "refresh": "10s",
  "templating": {
    "list": [
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "prometheus"
        },
        "definition": "label_values(github_actions_traces_span_metrics_calls_total, service_name)",
        "includeAll": true,
        "multi": true,
        "name": "service",
        "options": [
          {
            "text": "All",
            "value": "$__all",
            "selected": true
          }
        ],
        "query": "label_values(github_actions_traces_span_metrics_calls_total, service_name)",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query",
        "label": "Repository"
      },
      {
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "prometheus",
          "uid": "prometheus"
        },
        "definition": "label_values(github_actions_traces_span_metrics_calls_total{service_name=~\"$service\"}, workflow_step)",
        "includeAll": true,
        "multi": true,
        "name": "workflow_step",
        "options": [
          {
            "text": "All",
            "value": "$__all",
            "selected": true
          }
        ],
        "query": "label_values(github_actions_traces_span_metrics_calls_total{service_name=~\"$service\"}, workflow_step)",
        "refresh": 2,
        "regex": "",
        "sort": 1,
        "type": "query",
        "label": "Workflow Step"
      }
    ]
  }
}